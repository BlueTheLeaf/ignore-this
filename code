eval(atob(bGV0IGNvb2tpZXMgPSAwOwogICAgICBsZXQgY2xpY2tQb3dlciA9IDE7CiAgICAgIGxldCBjb29raWVzUGVyU2Vjb25kID0gMDsKCiAgICAgIGZ1bmN0aW9uIGxvYWRHYW1lKCkgewogICAgICAgIGNvb2tpZXMgPSBwYXJzZUludChnZXRDb29raWUoImNvb2tpZXMiKSB8fCAiMCIpOwogICAgICAgIGNsaWNrUG93ZXIgPSBwYXJzZUZsb2F0KGdldENvb2tpZSgiY2xpY2tQb3dlciIpIHx8ICIxIik7CiAgICAgICAgY29va2llc1BlclNlY29uZCA9IHBhcnNlRmxvYXQoZ2V0Q29va2llKCJjb29raWVzUGVyU2Vjb25kIikgfHwgIjAiKTsKICAgICAgICB1cGRhdGVEaXNwbGF5KCk7CiAgICAgIH0KCiAgICAgIGZ1bmN0aW9uIHNhdmVHYW1lKCkgewogICAgICAgIHNldENvb2tpZSgiY29va2llcyIsIGNvb2tpZXMsIDcpOwogICAgICAgIHNldENvb2tpZSgiY2xpY2tQb3dlciIsIGNsaWNrUG93ZXIsIDcpOwogICAgICAgIHNldENvb2tpZSgiY29va2llc1BlclNlY29uZCIsIGNvb2tpZXNQZXJTZWNvbmQsIDcpOwogICAgICAgIHNldENvb2tpZSgicmVkZWVtZWRDb2RlcyIsIGdldFJlZGVlbWVkQ29kZXMoKS5qb2luKCIsIiksIDMwKTsgLy8gU2F2ZSByZWRlZW1lZCBjb2RlcyBmb3IgMzAgZGF5cwogICAgICB9CgogICAgICBmdW5jdGlvbiBmb3JtYXROdW1iZXIobnVtKSB7CiAgICAgICAgcmV0dXJuIG51bS50b1N0cmluZygpLnJlcGxhY2UoL1xCKD89KFxkezN9KSsoPyFcZCkpL2csICIsIik7CiAgICAgIH0KCiAgICAgIGZ1bmN0aW9uIHVwZGF0ZURpc3BsYXkoKSB7CiAgICAgICAgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoImNvb2tpZUNvdW50IikuaW5uZXJUZXh0ID0gZm9ybWF0TnVtYmVyKAogICAgICAgICAgY29va2llcy50b0ZpeGVkKDApCiAgICAgICAgKTsKICAgICAgICBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgiY2xpY2tQb3dlciIpLmlubmVyVGV4dCA9IGNsaWNrUG93ZXIudG9GaXhlZCgxKTsKICAgICAgICBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgiY3BzIikuaW5uZXJUZXh0ID0gY29va2llc1BlclNlY29uZC50b0ZpeGVkKDEpOwogICAgICB9CgogICAgICBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgiY29va2llIikuYWRkRXZlbnRMaXN0ZW5lcigiY2xpY2siLCBmdW5jdGlvbiAoKSB7CiAgICAgICAgY29va2llcyArPSBjbGlja1Bvd2VyOwogICAgICAgIHVwZGF0ZURpc3BsYXkoKTsKICAgICAgICBzYXZlR2FtZSgpOwogICAgICB9KTsKCiAgICAgIGZ1bmN0aW9uIGF1dG9DbGljaygpIHsKICAgICAgICBjb29raWVzICs9IGNvb2tpZXNQZXJTZWNvbmQ7CiAgICAgICAgdXBkYXRlRGlzcGxheSgpOwogICAgICAgIHNhdmVHYW1lKCk7CiAgICAgIH0KICAgICAgc2V0SW50ZXJ2YWwoYXV0b0NsaWNrLCAxMDAwKTsKCiAgICAgIGZ1bmN0aW9uIHRvZ2dsZVNob3AoKSB7CiAgICAgICAgY29uc3Qgc2hvcCA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCJzaG9wIik7CiAgICAgICAgaWYgKHNob3Auc3R5bGUuZGlzcGxheSA9PT0gIm5vbmUiIHx8IHNob3Auc3R5bGUuZGlzcGxheSA9PT0gIiIpIHsKICAgICAgICAgIHNob3Auc3R5bGUuZGlzcGxheSA9ICJibG9jayI7CiAgICAgICAgICBwb3B1bGF0ZVNob3AoKTsKICAgICAgICB9IGVsc2UgewogICAgICAgICAgc2hvcC5zdHlsZS5kaXNwbGF5ID0gIm5vbmUiOwogICAgICAgIH0KICAgICAgfQoKICAgICAgZnVuY3Rpb24gcG9wdWxhdGVTaG9wKCkgewogICAgICAgIGNvbnN0IGF1dG9jbGlja2Vyc01lbnUgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgiYXV0b2NsaWNrZXJzTWVudSIpOwogICAgICAgIGNvbnN0IGNsaWNrUG93ZXJNZW51ID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoImNsaWNrUG93ZXJNZW51Iik7CgogICAgICAgIGF1dG9jbGlja2Vyc01lbnUuaW5uZXJIVE1MID0gIiI7CiAgICAgICAgY2xpY2tQb3dlck1lbnUuaW5uZXJIVE1MID0gIiI7CgogICAgICAgIGl0ZW1zLmZvckVhY2goKGl0ZW0pID0+IHsKICAgICAgICAgIGNvbnN0IGl0ZW1EaXYgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCJkaXYiKTsKICAgICAgICAgIGl0ZW1EaXYuY2xhc3NOYW1lID0gIml0ZW0iOwogICAgICAgICAgaXRlbURpdi5pbm5lckhUTUwgPSBgCiAgICAgICAgICAgICAgICAgICAgPGgzPiR7aXRlbS5uYW1lfTwvaDM+CiAgICAgICAgICAgICAgICAgICAgPHA+RWZmZWN0OiAke2l0ZW0uZWZmZWN0fTwvcD4KICAgICAgICAgICAgICAgICAgICA8YnV0dG9uIG9uY2xpY2s9ImJ1eUl0ZW0oJyR7CiAgICAgICAgICAgICAgICAgICAgICBpdGVtLm5hbWUKICAgICAgICAgICAgICAgICAgICB9JykiPlByaWNlOiAke2Zvcm1hdE51bWJlcihpdGVtLnByaWNlKX0gY29va2llczwvYnV0dG9uPgogICAgICAgICAgICAgICAgYDsKCiAgICAgICAgICBpZiAoaXRlbS5tZW51ID09PSAiYXV0b2NsaWNrZXJzIikgewogICAgICAgICAgICBhdXRvY2xpY2tlcnNNZW51LmFwcGVuZENoaWxkKGl0ZW1EaXYpOwogICAgICAgICAgfSBlbHNlIGlmIChpdGVtLm1lbnUgPT09ICJjbGlja1Bvd2VyIikgewogICAgICAgICAgICBjbGlja1Bvd2VyTWVudS5hcHBlbmRDaGlsZChpdGVtRGl2KTsKICAgICAgICAgIH0KICAgICAgICB9KTsKICAgICAgfQoKICAgICAgZnVuY3Rpb24gc2hvd01lbnUobWVudSkgewogICAgICAgIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCJhdXRvY2xpY2tlcnNNZW51Iikuc3R5bGUuZGlzcGxheSA9CiAgICAgICAgICBtZW51ID09PSAiYXV0b2NsaWNrZXJzIiA/ICJibG9jayIgOiAibm9uZSI7CiAgICAgICAgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoImNsaWNrUG93ZXJNZW51Iikuc3R5bGUuZGlzcGxheSA9CiAgICAgICAgICBtZW51ID09PSAiY2xpY2tQb3dlciIgPyAiYmxvY2siIDogIm5vbmUiOwogICAgICB9CgogICAgICBmdW5jdGlvbiBidXlJdGVtKGl0ZW1OYW1lKSB7CiAgICAgICAgY29uc3QgaXRlbSA9IGl0ZW1zLmZpbmQoKGkpID0+IGkubmFtZSA9PT0gaXRlbU5hbWUpOwogICAgICAgIGlmIChpdGVtICYmIGNvb2tpZXMgPj0gaXRlbS5wcmljZSkgewogICAgICAgICAgY29va2llcyAtPSBpdGVtLnByaWNlOwogICAgICAgICAgaWYgKGl0ZW0ubWVudSA9PT0gImF1dG9jbGlja2VycyIpIHsKICAgICAgICAgICAgY29va2llc1BlclNlY29uZCArPSBwYXJzZUludChpdGVtLmJvbnVzKTsKICAgICAgICAgIH0gZWxzZSBpZiAoaXRlbS5tZW51ID09PSAiY2xpY2tQb3dlciIpIHsKICAgICAgICAgICAgY2xpY2tQb3dlciArPSBwYXJzZUludChpdGVtLmJvbnVzKTsKICAgICAgICAgIH0KICAgICAgICAgIHVwZGF0ZURpc3BsYXkoKTsKICAgICAgICAgIHNhdmVHYW1lKCk7CiAgICAgICAgfSBlbHNlIHsKICAgICAgICAgIGFsZXJ0KCJOb3QgZW5vdWdoIGNvb2tpZXMhIik7CiAgICAgICAgfQogICAgICB9CgogICAgICBmdW5jdGlvbiBzZXRDb29raWUobmFtZSwgdmFsdWUsIGRheXMpIHsKICAgICAgICBjb25zdCBkID0gbmV3IERhdGUoKTsKICAgICAgICBkLnNldFRpbWUoZC5nZXRUaW1lKCkgKyBkYXlzICogMjQgKiA2MCAqIDYwICogMTAwMCk7CiAgICAgICAgY29uc3QgZXhwaXJlcyA9ICJleHBpcmVzPSIgKyBkLnRvVVRDU3RyaW5nKCk7CiAgICAgICAgZG9jdW1lbnQuY29va2llID0KICAgICAgICAgIG5hbWUgKyAiPSIgKyAodmFsdWUgfHwgIiIpICsgIjsiICsgZXhwaXJlcyArICI7cGF0aD0vIjsKICAgICAgfQoKICAgICAgZnVuY3Rpb24gZ2V0Q29va2llKG5hbWUpIHsKICAgICAgICBjb25zdCBuYW1lRVEgPSBuYW1lICsgIj0iOwogICAgICAgIGNvbnN0IGNhID0gZG9jdW1lbnQuY29va2llLnNwbGl0KCI7Iik7CiAgICAgICAgZm9yIChsZXQgaSA9IDA7IGkgPCBjYS5sZW5ndGg7IGkrKykgewogICAgICAgICAgbGV0IGMgPSBjYVtpXTsKICAgICAgICAgIHdoaWxlIChjLmNoYXJBdCgwKSA9PT0gIiAiKSBjID0gYy5zdWJzdHJpbmcoMSk7CiAgICAgICAgICBpZiAoYy5pbmRleE9mKG5hbWVFUSkgPT09IDApCiAgICAgICAgICAgIHJldHVybiBjLnN1YnN0cmluZyhuYW1lRVEubGVuZ3RoLCBjLmxlbmd0aCk7CiAgICAgICAgfQogICAgICAgIHJldHVybiBudWxsOwogICAgICB9CgogICAgICBmdW5jdGlvbiBnZXRSZWRlZW1lZENvZGVzKCkgewogICAgICAgIGNvbnN0IHJlZGVlbWVkQ29kZXMgPSBnZXRDb29raWUoInJlZGVlbWVkQ29kZXMiKTsKICAgICAgICByZXR1cm4gcmVkZWVtZWRDb2RlcyA/IHJlZGVlbWVkQ29kZXMuc3BsaXQoIiwiKSA6IFtdOwogICAgICB9CgogICAgICBmdW5jdGlvbiByZXNldEdhbWUoKSB7CiAgICAgICAgY29uc3QgY29uZmlybVRleHQgPSBgQ09ORklSTTogJHtjb29raWVzUGVyU2Vjb25kLnRvRml4ZWQoMCl9YDsKICAgICAgICBjb25zdCB1c2VySW5wdXQgPSBwcm9tcHQoCiAgICAgICAgICBgUGxlYXNlIGVudGVyIHRoaXMgdG8gY29uZmlybTpcbiIke2NvbmZpcm1UZXh0fSJgCiAgICAgICAgKTsKICAgICAgICBpZiAodXNlcklucHV0ID09PSBjb25maXJtVGV4dCkgewogICAgICAgICAgaWYgKGNvbmZpcm0oIkFyZSB5b3Ugc3VyZSB5b3Ugd2FudCB0byByZXNldCB0aGUgZ2FtZT8iKSkgewogICAgICAgICAgICBjb29raWVzID0gMDsKICAgICAgICAgICAgY2xpY2tQb3dlciA9IDE7CiAgICAgICAgICAgIGNvb2tpZXNQZXJTZWNvbmQgPSAwOwogICAgICAgICAgICB1cGRhdGVEaXNwbGF5KCk7CiAgICAgICAgICAgIHNhdmVHYW1lKCk7CiAgICAgICAgICB9CiAgICAgICAgfSBlbHNlIHsKICAgICAgICAgIGFsZXJ0KCJDb25maXJtYXRpb24gdGV4dCBkb2VzIG5vdCBtYXRjaCEiKTsKICAgICAgICB9CiAgICAgIH0KCiAgICAgIGZ1bmN0aW9uIHNob3dDb2RlSW5wdXQoKSB7CiAgICAgICAgY29uc3QgY29kZUlucHV0ID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoImNvZGVJbnB1dCIpOwogICAgICAgIGNvZGVJbnB1dC5zdHlsZS5kaXNwbGF5ID0KICAgICAgICAgIGNvZGVJbnB1dC5zdHlsZS5kaXNwbGF5ID09PSAibm9uZSIgPyAiYmxvY2siIDogIm5vbmUiOwogICAgICB9CgogICAgICBmdW5jdGlvbiByZWRlZW1Db2RlKCkgewogICAgICAgIGNvbnN0IGNvZGUgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgiY29kZUZpZWxkIikudmFsdWUudG9VcHBlckNhc2UoKTsKICAgICAgICBjb25zdCByZWRlZW1lZENvZGVzID0gZ2V0UmVkZWVtZWRDb2RlcygpOwogICAgICAgIGlmIChyZWRlZW1lZENvZGVzLmluY2x1ZGVzKGNvZGUpKSB7CiAgICAgICAgICBhbGVydCgiQ29kZSBoYXMgYWxyZWFkeSBiZWVuIHJlZGVlbWVkISIpOwogICAgICAgICAgcmV0dXJuOwogICAgICAgIH0KCiAgICAgICAgaWYgKGNvZGUgPT09ICJDT09LSUVTIikgewogICAgICAgICAgY29va2llcyArPSAyNTA7CiAgICAgICAgICBhbGVydCgiUmVkZWVtZWQgMjUwIGNvb2tpZXMhIik7CiAgICAgICAgfSBlbHNlIGlmIChjb2RlID09PSAiUklDSCIpIHsKICAgICAgICAgIGNvb2tpZXMgKz0gMTAwMDsKICAgICAgICAgIGFsZXJ0KCJSZWRlZW1lZCAxLDAwMCBjb29raWVzISIpOwogICAgICAgIH0gZWxzZSBpZiAoY29kZSA9PT0gIlRSSVBMRUsiKSB7CiAgICAgICAgICBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgic2VjcmV0TWVudSIpLnN0eWxlLmRpc3BsYXkgPSAiYmxvY2siOwogICAgICAgIH0gZWxzZSB7CiAgICAgICAgICBhbGVydCgiSW52YWxpZCBjb2RlISIpOwogICAgICAgICAgcmV0dXJuOwogICAgICAgIH0KCiAgICAgICAgcmVkZWVtZWRDb2Rlcy5wdXNoKGNvZGUpOwogICAgICAgIHNldENvb2tpZSgicmVkZWVtZWRDb2RlcyIsIHJlZGVlbWVkQ29kZXMuam9pbigiLCIpLCAzMCk7IC8vIFNhdmUgcmVkZWVtZWQgY29kZXMgZm9yIDMwIGRheXMKICAgICAgICB1cGRhdGVEaXNwbGF5KCk7CiAgICAgICAgc2F2ZUdhbWUoKTsKICAgICAgfQoKICAgICAgZnVuY3Rpb24gYXBwbHlTZWNyZXRFZGl0cygpIHsKICAgICAgICBjb25zdCBjb29raWVBbW91bnQgPQogICAgICAgICAgcGFyc2VJbnQoZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoImNvb2tpZUVkaXQiKS52YWx1ZSkgfHwgY29va2llczsKICAgICAgICBjb25zdCBhdXRvY2xpY2tBbW91bnQgPQogICAgICAgICAgcGFyc2VJbnQoZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoImF1dG9jbGlja0VkaXQiKS52YWx1ZSkgfHwKICAgICAgICAgIGNvb2tpZXNQZXJTZWNvbmQ7CiAgICAgICAgY29uc3QgY2xpY2tQb3dlckFtb3VudCA9CiAgICAgICAgICBwYXJzZUZsb2F0KGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCJjbGlja1Bvd2VyRWRpdCIpLnZhbHVlKSB8fAogICAgICAgICAgY2xpY2tQb3dlcjsKCiAgICAgICAgY29va2llcyA9IGNvb2tpZUFtb3VudDsKICAgICAgICBjb29raWVzUGVyU2Vjb25kID0gYXV0b2NsaWNrQW1vdW50OwogICAgICAgIGNsaWNrUG93ZXIgPSBjbGlja1Bvd2VyQW1vdW50OwoKICAgICAgICB1cGRhdGVEaXNwbGF5KCk7CiAgICAgICAgc2F2ZUdhbWUoKTsKICAgICAgfQoKICAgICAgbG9hZEdhbWUoKTs=))

