let cookies = 0;
      let clickPower = 1;
      let cookiesPerSecond = 0;

      function loadGame() {
        cookies = parseInt(getCookie("cookies") || "0");
        clickPower = parseFloat(getCookie("clickPower") || "1");
        cookiesPerSecond = parseFloat(getCookie("cookiesPerSecond") || "0");
        updateDisplay();
      }

      function saveGame() {
        setCookie("cookies", cookies, 7);
        setCookie("clickPower", clickPower, 7);
        setCookie("cookiesPerSecond", cookiesPerSecond, 7);
        setCookie("redeemedCodes", getRedeemedCodes().join(","), 30); // Save redeemed codes for 30 days
      }

      function formatNumber(num) {
        return num.toString().replace(/\B(?=(\d{3})+(?!\d))/g, ",");
      }

      function updateDisplay() {
        document.getElementById("cookieCount").innerText = formatNumber(
          cookies.toFixed(0)
        );
        document.getElementById("clickPower").innerText = clickPower.toFixed(1);
        document.getElementById("cps").innerText = cookiesPerSecond.toFixed(1);
      }

      document.getElementById("cookie").addEventListener("click", function () {
        cookies += clickPower;
        updateDisplay();
        saveGame();
      });

      function autoClick() {
        cookies += cookiesPerSecond;
        updateDisplay();
        saveGame();
      }
      setInterval(autoClick, 1000);

      function toggleShop() {
        const shop = document.getElementById("shop");
        if (shop.style.display === "none" || shop.style.display === "") {
          shop.style.display = "block";
          populateShop();
        } else {
          shop.style.display = "none";
        }
      }

      function populateShop() {
        const autoclickersMenu = document.getElementById("autoclickersMenu");
        const clickPowerMenu = document.getElementById("clickPowerMenu");

        autoclickersMenu.innerHTML = "";
        clickPowerMenu.innerHTML = "";

        items.forEach((item) => {
          const itemDiv = document.createElement("div");
          itemDiv.className = "item";
          itemDiv.innerHTML = `
                    <h3>${item.name}</h3>
                    <p>Effect: ${item.effect}</p>
                    <button onclick="buyItem('${
                      item.name
                    }')">Price: ${formatNumber(item.price)} cookies</button>
                `;

          if (item.menu === "autoclickers") {
            autoclickersMenu.appendChild(itemDiv);
          } else if (item.menu === "clickPower") {
            clickPowerMenu.appendChild(itemDiv);
          }
        });
      }

      function showMenu(menu) {
        document.getElementById("autoclickersMenu").style.display =
          menu === "autoclickers" ? "block" : "none";
        document.getElementById("clickPowerMenu").style.display =
          menu === "clickPower" ? "block" : "none";
      }

      function buyItem(itemName) {
        const item = items.find((i) => i.name === itemName);
        if (item && cookies >= item.price) {
          cookies -= item.price;
          if (item.menu === "autoclickers") {
            cookiesPerSecond += parseInt(item.bonus);
          } else if (item.menu === "clickPower") {
            clickPower += parseInt(item.bonus);
          }
          updateDisplay();
          saveGame();
        } else {
          alert("Not enough cookies!");
        }
      }

      function setCookie(name, value, days) {
        const d = new Date();
        d.setTime(d.getTime() + days * 24 * 60 * 60 * 1000);
        const expires = "expires=" + d.toUTCString();
        document.cookie =
          name + "=" + (value || "") + ";" + expires + ";path=/";
      }

      function getCookie(name) {
        const nameEQ = name + "=";
        const ca = document.cookie.split(";");
        for (let i = 0; i < ca.length; i++) {
          let c = ca[i];
          while (c.charAt(0) === " ") c = c.substring(1);
          if (c.indexOf(nameEQ) === 0)
            return c.substring(nameEQ.length, c.length);
        }
        return null;
      }

      function getRedeemedCodes() {
        const redeemedCodes = getCookie("redeemedCodes");
        return redeemedCodes ? redeemedCodes.split(",") : [];
      }

      function resetGame() {
        const confirmText = `CONFIRM: ${cookiesPerSecond.toFixed(0)}`;
        const userInput = prompt(
          `Please enter this to confirm:\n"${confirmText}"`
        );
        if (userInput === confirmText) {
          if (confirm("Are you sure you want to reset the game?")) {
            cookies = 0;
            clickPower = 1;
            cookiesPerSecond = 0;
            updateDisplay();
            saveGame();
          }
        } else {
          alert("Confirmation text does not match!");
        }
      }

      function showCodeInput() {
        const codeInput = document.getElementById("codeInput");
        codeInput.style.display =
          codeInput.style.display === "none" ? "block" : "none";
      }

      function redeemCode() {
        const code = document.getElementById("codeField").value.toUpperCase();
        const redeemedCodes = getRedeemedCodes();
        if (redeemedCodes.includes(code)) {
          alert("Code has already been redeemed!");
          return;
        }

        if (code === "COOKIES") {
          cookies += 250;
          alert("Redeemed 250 cookies!");
        } else if (code === "RICH") {
          cookies += 1000;
          alert("Redeemed 1,000 cookies!");
        } else if (code === "TRIPLEK") {
          document.getElementById("secretMenu").style.display = "block";
        } else {
          alert("Invalid code!");
          return;
        }

        redeemedCodes.push(code);
        setCookie("redeemedCodes", redeemedCodes.join(","), 30); // Save redeemed codes for 30 days
        updateDisplay();
        saveGame();
      }

      function applySecretEdits() {
        const cookieAmount =
          parseInt(document.getElementById("cookieEdit").value) || cookies;
        const autoclickAmount =
          parseInt(document.getElementById("autoclickEdit").value) ||
          cookiesPerSecond;
        const clickPowerAmount =
          parseFloat(document.getElementById("clickPowerEdit").value) ||
          clickPower;

        cookies = cookieAmount;
        cookiesPerSecond = autoclickAmount;
        clickPower = clickPowerAmount;

        updateDisplay();
        saveGame();
      }

      loadGame();
